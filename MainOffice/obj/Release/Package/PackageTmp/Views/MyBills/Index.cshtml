@model IEnumerable<MainOffice.Models.MyBillsViewModel>
@using MainOffice.App_LocalResources
@using MainOffice.Helpers
@{
    ViewBag.Title = "Мои счета";
}

<div class="container">
    @if (Session["OperEmployee"] != null)
    { 
        <div class="row m-1">@Html.ActionLink(GlobalRes.Close + " - " + (string)ViewBag.Name, "Index","PinLock",null, new { @class = "btn btn-outline-danger" })</div>
    }
    @if (Model != null)
    {
        <div class="row">
            <table class="table table-responsive table-striped">
                <thead>
                    <tr>
                        <th scope="col" colspan="5">Мои счета</th>
                        <th scope="col" colspan="2">@GlobalRes.Summ:</th>
                        <th id="daySumm" scope="col" colspan="2">0</th>
                    </tr>
                    <tr>
                        <th scope="col">№</th>
                        <th scope="col">Инфо</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.BillNumber)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.ClientName)</th>
                        <th scope="col">@Html.DisplayShortNameFor(model => model.StartTime)</th>
                        <th scope="col">@Html.DisplayShortNameFor(model => model.EndTime)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.BO)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.Summ)</th>
                        <th scope="col">@Ajax.CustomActionLink(Html.DisplayCustomForModel("Name") + " - " + GlobalRes.Create, "Create", "MyBills", null, new AjaxOptions { UpdateTargetId = "windowmodal", InsertionMode = InsertionMode.ReplaceWith, OnSuccess = "showModal", HttpMethod = "Get", LoadingElementId = "addSpinner", OnFailure = "onFail" }, new { @class = "btn btn-outline-success" }, "fas fa-spinner fa-pulse")</th>
                    </tr>
                </thead>
                <tbody id="tbodyBills">
                    @*@{
                        int i = 0;
                        foreach (MainOffice.Models.MyBillsViewModel bill in Model)
                        {
                            i++;
                            <tr id="@("trBill" + bill.Id)" @(String.IsNullOrEmpty(bill.EndTime) ? "" : "class=\"bg-success\"")>
                                <th>@(i + 1)</th>
                                <td>@Ajax.ActionLink("Info", "Info", null, new AjaxOptions { UpdateTargetId = "windowmodal", InsertionMode = InsertionMode.ReplaceWith, OnSuccess = "showModal" }, new { @class = "btn btn-outline-info" })</td>
                                <td>@Html.DisplayFor(model => bill.BillNumber)</td>
                                <td>@Html.DisplayFor(model => bill.ClientName)</td>
                                <td>@Html.DisplayFor(model => bill.StartTime)</td>
                                <td id="@("tdEnd" + bill.Id)">@Html.DisplayFor(model => bill.EndTime)</td>
                                <td>@Html.DisplayFor(model => bill.BO)</td>
                                <td>@Html.DisplayFor(model => bill.Summ)</td>
                                <td id="@("tdClose" + bill.Id)">
                                    @using (Ajax.BeginForm("CloseBill", "MyBills", null, new AjaxOptions() { Confirm = GlobalRes.Close + " " + GlobalRes.BillShortName + " №" + bill.BillNumber + " ?", HttpMethod = "Post", OnSuccess = "onSuccessCloseBill" }, new { id = "formClose" + (i + 2) }))
                                    {
                                        @Html.Hidden("id", bill.Id)
                                        <input type="submit" class="btn btn-outline-danger" value="Закрыть счет" />

                                    }
                                </td>
                            </tr>
                        }
                    }*@
                </tbody>
            </table>
        </div>
        <div id="windowmodal">

        </div>
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            Вам не выдан рабочий лист
        </div>
    }

</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}
@section scripts
{
    <script type="text/javascript">
        var bill = {
            id: 0,
            BillNumber: 0,
            Promotion: '',
            BillLines: [],
            Summ: 0
        }
        var bills = [];

       function showModal() {
            $('#windowmodal').modal('show');
            bill = {
                Promotion: '',
                BillLines: [],
                Summ: 0
            };
        }
        function hideLineList()
        {
            var elements = document.getElementsByClassName('lineList');
            elements.forEach(element => element.setAttribute('style', 'display:none'));
            document.getElementById('pricelistButtonClose').style.display = "block";
        }
        function showLineList() {
            var elements = document.getElementsByClassName('lineList');
            elements.forEach(element => {
                if (element.className.indexOf('modal-header') != -1){
                    element.setAttribute('style', 'display:flex')
                }
                else
                { element.setAttribute('style', 'display:block')}
            });
            document.getElementById('pricelistButtonClose').style.display = "none";
        }

        function promotionChange(inpt) {
            switch (inpt.id)
            {
                case 'option2':
                    bill.Promotion = '10%';
                    break;
                case 'option3':
                    bill.Promotion = 'staff';
                    break;
                default:
                    bill.Promotion = '';
                    break;
            }
            if (bill.BillLines.length > 0) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GetBillPrices", "MyBills")",
                    data: {
                        bill: bill,
                        discount: bill.Promotion
                    },
                    beforeSend: function () {
                        document.getElementById('promoSpinner').style.display = 'block'
                    },
                    success: function (data) {
                        if (data.result === 'success') {
                            if (data.bill.BillLines) {
                                bill.BillLines = [];
                                for (var i = 0; i < data.bill.BillLines.length; i++) {
                                    var billLine = {
                                        Id: 0,
                                        CashRegCode: 0,
                                        ProductOrServiceName: '',
                                        Quantity: 0,
                                        SellPrice: 0,
                                        Summ: 0
                                    };
                                    billLine.Id = data.bill.BillLines[i].Id;
                                    billLine.CashRegCode = data.bill.BillLines[i].CashRegCode;
                                    billLine.ProductOrServiceName = data.bill.BillLines[i].ProductOrServiceName;
                                    billLine.SellPrice = data.bill.BillLines[i].SellPrice;
                                    billLine.Quantity = data.bill.BillLines[i].Quantity;
                                    bill.BillLines.push(billLine);
                                }
                                countSumm();
                                showLineList();
                            }
                        }
                        else {
                            alert(data.message)
                        }
                    },
                    error: onFail,
                    complete: function () { document.getElementById('promoSpinner').style.display = 'none' }
                })
            }
        }
        function createBill()
        {
            bill.BillNumber = document.getElementById('BillNumber').value;
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            var list = [];
            for (var i = 0; i < bill.BillLines.length; i++)
            {
                var line = { Code: bill.BillLines[i].CashRegCode, Quantity: bill.BillLines[i].Quantity };
                list.push(line);
            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("Create", "MyBills")",
                data: {
                    __RequestVerificationToken: token,
                    BillNumber: bill.BillNumber,
                    list,
                    discount: bill.Promotion
                },
                beforeSend: function () {
                    document.getElementById('startSpinner').style.display = 'block'
                },
                success: function (data) {
                    if (data.result === 'success') {
                        $('#windowmodal').modal('hide');
                        bills.push(data.bill);
                        rebuildTableBills();
                    }
                    else {
                        alert(data.message)
                    }
                },
                error: onFail,
                complete: function () { document.getElementById('startSpinner').style.display = 'none' }
            })
        }

        

        function onSuccessChooseCode(btn)
        {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetLinePrice", "MyBills")",
                data: {
                    codeId: btn.id.substring(6),
                    discount: bill.Promotion
                },
                success: function (data) {
                    if (data.result === 'success') {
                        var billLine = {
                            Id: 0,
                            CashRegCode: 0,
                            ProductOrServiceName: '',
                            Quantity: 0,
                            SellPrice: 0,
                            Summ: 0
                        };
                        billLine.CashRegCode = data.data.CashRegCode;
                        billLine.ProductOrServiceName = data.data.ProductOrServiceName;
                        billLine.SellPrice = data.data.SellPrice;
                        billLine.Quantity = 1;
                        bill.BillLines.push(billLine);
                        countSumm();
                        showLineList();
                    }
                    else {
                        alert(data.message)
                    }
                }
            })
        }
        function rebuildTableCreate()
        {
            const formatter = new Intl.NumberFormat('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            });
            document.getElementById('wholeSumm').innerHTML = formatter.format(bill.Summ);
            var old_tbody = document.getElementById('tbodyLines');
            var new_tbody = document.createElement('tbody');
            new_tbody.id = 'tbodyLines';
            for (var i = 0; i < bill.BillLines.length; i++)
            {
                var row = new_tbody.insertRow();
                var cell = row.insertCell();
                var text = document.createTextNode(i + 1);
                cell.appendChild(text);
                cell = row.insertCell();
                text = document.createTextNode(bill.BillLines[i].CashRegCode);
                cell.appendChild(text);
                cell = row.insertCell();
                text = document.createTextNode(bill.BillLines[i].ProductOrServiceName);
                cell.appendChild(text);
                cell = row.insertCell();
                text = document.createTextNode(bill.BillLines[i].SellPrice);
                cell.appendChild(text);
                cell = row.insertCell();
                var btn = document.createElement('button');
                btn.value = i;
                btn.onclick = function () { if (bill.BillLines[this.value].Quantity > 1) { bill.BillLines[this.value].Quantity = bill.BillLines[this.value].Quantity - 1; countSumm(); } };
                btn.className = "btn btn-outline-danger";
                text = document.createTextNode(' - ');
                btn.appendChild(text);
                cell.appendChild(btn);
                cell = row.insertCell();
                var inpt = document.createElement('input');
                inpt.id = "inptQuan" + i;
                inpt.className = "form-control col-sm";
                inpt.value = bill.BillLines[i].Quantity;
                inpt.onchange = function () { bill.BillLines[this.id.substring(8)].Quantity = this.value; countSumm(); };
                cell.appendChild(inpt);
                cell = row.insertCell();
                btn = document.createElement('button');
                btn.value = i;
                btn.onclick = function () { bill.BillLines[this.value].Quantity = bill.BillLines[this.value].Quantity + 1; countSumm(); };
                btn.className = "btn btn-outline-success";
                text = document.createTextNode(' + ');
                btn.appendChild(text);
                cell.appendChild(btn);
                cell = row.insertCell();
                text = document.createTextNode(formatter.format(bill.BillLines[i].Summ));
                cell.appendChild(text);
                cell = row.insertCell();
                btn = document.createElement('button');
                btn.className = "btn btn-outline-danger";
                btn.value = i;
                btn.onclick = function () { bill.BillLines.splice(this.value,1); countSumm(); };
                var ico = document.createElement('i');
                ico.className = "fa fa-trash";
                ico.setAttribute("aria-hidden", "true");
                btn.appendChild(ico);
                cell.appendChild(btn);
            }
            old_tbody.parentNode.replaceChild(new_tbody, old_tbody);

        }

        function rebuildTableBills() {
            const formatter = new Intl.NumberFormat('en-US', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2,
            });
            var Summ = 0;
            var old_tbody = document.getElementById('tbodyBills');
            var new_tbody = document.createElement('tbody');
            new_tbody.id = 'tbodyBills';
            for (var i = 0; i < bills.length; i++) {
                var row = new_tbody.insertRow();
                row.id = 'trBill' + bills[i].Id;
                row.value = i;
                if (!bills[i].EndTime) {
                    //row.className = 'bg-success';
                    row.style = "background-color: #A7FD56"
                }
                var cell = row.insertCell();
                var text = document.createTextNode(i + 1);
                cell.appendChild(text);
                cell = row.insertCell();
                var div = document.createElement('div');
                div.className = "btn-group";
                div.setAttribute('role', 'group');
                var a = document.createElement('a');
                a.className = "btn btn-outline-info";
                a.title = "Info";
                a.href = "@Url.Action("Info", "MyBills")?Id=" + bills[i].Id;
                a.setAttribute("data-ajax", "true");
                a.setAttribute("data-ajax-method", "Get");
                a.setAttribute("data-ajax-mode", "replace-with");
                a.setAttribute("data-ajax-success", "showModal");
                a.setAttribute("data-ajax-update", "#windowmodal");
                var ico = document.createElement('i');
                ico.className = "fas fa-info-circle";
                ico.setAttribute("aria-hidden", "true");
                a.appendChild(ico);
                cell.appendChild(a);
                cell = row.insertCell();
                text = document.createTextNode(bills[i].BillNumber + ' ');
                cell.appendChild(text);
                if (!bills[i].EndTime) {
                    a = document.createElement('a');
                    a.className = "btn btn-outline-warning";
                    a.title = "@GlobalRes.Edit @GlobalRes.BillShortName";;
                    a.href = "@Url.Action("Edit", "MyBills")?id=" + bills[i].Id;
                    a.setAttribute("data-ajax", "true");
                    a.setAttribute("data-ajax-method", "Get");
                    a.setAttribute("data-ajax-mode", "replace-with");
                    a.setAttribute("data-ajax-success", "getEditData");
                    a.setAttribute("data-ajax-update", "#windowmodal");
                    ico = document.createElement('i');
                    ico.className = "fas fa-pen-alt";
                    ico.setAttribute("aria-hidden", "true");
                    a.appendChild(ico);
                    cell.appendChild(a);
                }
                cell = row.insertCell();
                text = document.createTextNode(bills[i].ClientName);
                cell.appendChild(text);
                cell = row.insertCell();
                text = document.createTextNode(bills[i].StartTime);
                cell.appendChild(text);
                cell = row.insertCell();
                cell.id = 'tdEnd' + bills[i].Id;
                text = document.createTextNode(bills[i].EndTime);
                cell.appendChild(text);
                cell = row.insertCell();
                text = document.createTextNode(bills[i].BO ? 'Да' : 'Нет');
                cell.appendChild(text);
                cell = row.insertCell();
                text = document.createTextNode(bills[i].Summ);
                cell.appendChild(text);
                cell = row.insertCell();
                if (!bills[i].EndTime) {
                    var btn = document.createElement('button');
                    btn.className = "btn btn-outline-dark";
                    btn.title = "@GlobalRes.Close @GlobalRes.BillShortName";
                    btn.value = i; 
                    btn.onclick = function () { if (confirm("@GlobalRes.Close @GlobalRes.BillShortName на " + bills[this.value].Summ + "     №" + bills[this.value].BillNumber + " ?")) { closeBill(bills[this.value].Id) } };
                    var ico = document.createElement('i');
                    ico.className = "fas fa-spinner fa-pulse";
                    ico.setAttribute("aria-hidden", "true");
                    ico.setAttribute("style", "display:none");
                    ico.id = "CloseBillSpinner";
                    btn.appendChild(ico);
                    ico = document.createElement('i');
                    ico.className = "far fa-calendar-check";
                    ico.setAttribute("aria-hidden", "true");
                    btn.appendChild(ico);
                    cell.appendChild(btn);
                }
                Summ = bills[i].BO ? Summ : Summ + bills[i].Summ;
            }
            old_tbody.parentNode.replaceChild(new_tbody, old_tbody);
            document.getElementById('daySumm').innerHTML = formatter.format(Summ);
        }

        function countSumm()
        {

            var Summ = 0;
            for (var i = 0; i < bill.BillLines.length; i++)
            {
                bill.BillLines[i].Summ = bill.BillLines[i].SellPrice * bill.BillLines[i].Quantity;
                Summ = Summ + bill.BillLines[i].Summ;
            }
            bill.Summ = Summ;
            rebuildTableCreate();
        }

        function generateTable(table, data) {
            for (let element of data) {
                let row = table.insertRow();
                for (key in element) {
                    let cell = row.insertCell();
                    let text = document.createTextNode(element[key]);
                    cell.appendChild(text);
                }
            }
        }
        $("document").ready(function () {
            getData();
        })
        function getData()
        {
            $.ajax({
                type: "GET",
                url: "@Url.Action("Data", "MyBills")",
                success: function (data) {
                    if (data.result === 'success') {
                        bills = data.myBills;
                        rebuildTableBills();
                    }
                    else {
                        alert(data.message)
                    }
                }
            })
        }
        function getEditData()
        {
            if (document.getElementById('BillId')) {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("EditData", "MyBills")?id=" + document.getElementById('BillId').value,
                    success: function (data) {
                        if (data.result === 'success') {
                            bill.id = data.bill.Id;
                            bill.BillNumber = data.bill.BillNumber;
                            bill.Promotion = data.bill.BillLines.length > 0 ? data.bill.BillLines[0].Promotion == 'Сотрудник' ? 'staff' : data.bill.BillLines[0].Promotion : data.bill.InitialPromo == 'Сотрудник' ? 'staff' : data.bill.InitialPromo;
                            bill.BillLines = data.bill.BillLines;
                            bill.version = data.bill.RowVersion;
                            countSumm();
                            $('#windowmodal').modal('show');
                        }
                        else {
                            alert(data.message)
                        }
                    }
                })
            }
            else
            {
                $('#windowmodal').modal('show');
            }
        }
        function editBill()
        {
            bill.id = document.getElementById('BillId').value;
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            var list = [];
            for (var i = 0; i < bill.BillLines.length; i++)
            {
                var line = { Id: bill.BillLines[i].Id, Code: bill.BillLines[i].CashRegCode, Quantity: bill.BillLines[i].Quantity };
                list.push(line);
            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("Edit", "MyBills")",
                data: {
                    __RequestVerificationToken: token,
                    id: bill.id,
                    list,
                    discount: bill.Promotion,
                    version: bill.version
                },
                beforeSend: function () {
                    document.getElementById('startSpinner').style.display = 'block'
                },
                success: function (data) {
                    if (data.result === 'success') {
                        $('#windowmodal').modal('hide');
                        bills[document.getElementById('trBill' + data.bill.Id).value] = data.bill;
                        rebuildTableBills();
                    }
                    else {
                        alert(data.message)
                    }
                },
                error: onFail,
                complete: function () { document.getElementById('startSpinner').style.display = 'none' }
            })
        }
        function closeBill(Id) {
            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("CloseBill", "MyBills")",
                data: {
                    __RequestVerificationToken: token,
                    Id:Id
                },
                beforeSend: function () {
                    document.getElementById('CloseBillSpinner').style.display = 'block'
                },
                success: function (data) {
                    if (data.result === 'success') {
                        $('#windowmodal').modal('hide');
                        bills[document.getElementById('trBill' + data.bill.Id).value] = data.bill;
                        rebuildTableBills();
                    }
                    else {
                        alert(data.message)
                    }
                },
                error: onFail,
                complete: function () { document.getElementById('CloseBillSpinner').style.display = 'none' }
            })
        }
        function UnlockEdit()
        {
            if (confirm("Изменения не сохранятся. Закрыть редактор ?")) {
                bill.id = document.getElementById('BillId').value;
                var form = $('#__AjaxAntiForgeryForm');
                var token = $('input[name="__RequestVerificationToken"]', form).val();
                $('#windowmodal').modal('hide');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FinishEdit", "MyBills")",
                    data: {
                        __RequestVerificationToken: token,
                        Id: bill.id,
                        version: bill.version
                    }
                })
            }
        }
        function onFail(xhr) {
            alert('Действие не выполнено. Статус: ' + xhr.status + ', Тест статуса: ' + xhr.status)
        }
    </script>
}
