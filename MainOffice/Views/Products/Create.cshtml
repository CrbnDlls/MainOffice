@model MainOffice.Models.Product
@using MainOffice.App_LocalResources
@using MainOffice.Helpers

@{
    ViewBag.Title = GlobalRes.Create + " " + Html.DisplayCustomForModel("Name").ToString();
}

<div class="modal-header" id="modalTop">
    <h5 class="modal-title">@String.Concat(new string[]{Html.DisplayCustomForModel("Name").ToString(), " - ",GlobalRes.Create})</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
@using (Ajax.BeginForm("Create", null, new AjaxOptions { OnSuccess = "onSuccessCreate", UpdateTargetId = "modalform", LoadingElementId= "createLoading", OnFailure = "failSave" }, new { id = "CreateForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <hr class="border border-primary" />

        <div class="form-row">
		<div class="form-group col">
				@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationEditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
<div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
				<div class="form-group col">
				@Html.LabelFor(model => model.TrademarkId, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationDropDownListFor(model => model.TrademarkId, null, htmlAttributes: new { @class = "form-control" })
<div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.TrademarkId, "", new { @class = "text-danger" })
            </div>
        </div>
				<div class="form-group col">
				@Html.LabelFor(model => model.ProductlineId, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationDropDownListFor(model => model.ProductlineId, null, htmlAttributes: new { @class = "form-control" })
<div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.ProductlineId, "", new { @class = "text-danger" })
            </div>
        </div>
		</div>
                    <hr class="border border-primary" />        <div class="form-row">
		<div class="form-group col">
				@Html.LabelFor(model => model.ProductVolumeId, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationDropDownListFor(model => model.ProductVolumeId, null, htmlAttributes: new { @class = "form-control" })
<div class="invalid-feedback">
                @Html.ValidationMessageFor(model => model.ProductVolumeId, "", new { @class = "text-danger" })
            </div>
        </div>
		</div>
                    <hr class="border border-primary" />
	
<div class="modal-footer">
                        <button type="submit" class="btn btn-outline-success"><i class="fas fa-spinner fa-pulse" style="display:none" id="createLoading"></i> @GlobalRes.Save</button>
                        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">@GlobalRes.Close</button>
                    </div>
}
